#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#define MAX 10000 //원소 만개까지 정렬 가능

void radixSort(int *a. int n) {
    int res[MAX], maxValue = 0; // 결과배열, 자릿수 결정할 최댓 값
    int exp =1; //exp 변수가 *10씩 증가하면서 1의 자리부터 쭉 계산될 수 있게 할 것임
    for(int i = 0; i < n; i++){
        if(a[i] > maxValue) maxValue = a[i]; //가장 큰값 찾기
    }
    while (maxValue / exp > 0){
        int bucket[10] = {o}; //자릿수 배열 초기화(자릿수가 바뀔 때 마다)
        for (int i = 0; i < n; i++) bucket[a[i] / exp % 10]++; //자릿수 배열 처리(현재 보고있는 자릿수에 해당하는 값에 카운트 +1
        for (int i = 0; i < 10; i++) bucket[i] += bucket[i-1]; //자릿수 배열 -> 누적 계산
        for (int i = n-1; i>=0; i--){ //배열의 가장 뒤의 원소부터 정렬 
            res[--bucket[a[i]/ exp % 10]] = a[i]
        }
        for(int i =0; i < n; i++) a[i] = res[i]; //기본 배열 갱신
        exp *= 10; //다음 자릿수로 이동하기 위해
    }
}

int main(void){ //기수 정렬 메인함수에서 사용하기
    int a[MAX];
    int i, n;
    scanf("%d", &a[i]);
    for(i = 0; i < n; i++){
        scanf("%d", &a[i]);
    }
    radixSort(a, n);
    for ( i = 0; i < n; i++){
        printf("%d", a[i]);
    }
    system("pause");
}
